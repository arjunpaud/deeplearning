{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":2090,"sourceType":"datasetVersion","datasetId":1118}],"dockerImageVersionId":30733,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as  pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import MinMaxScaler\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-13T14:17:07.917011Z","iopub.execute_input":"2024-06-13T14:17:07.917740Z","iopub.status.idle":"2024-06-13T14:17:07.922242Z","shell.execute_reply.started":"2024-06-13T14:17:07.917710Z","shell.execute_reply":"2024-06-13T14:17:07.921313Z"},"trusted":true},"execution_count":59,"outputs":[]},{"cell_type":"code","source":"dataset=pd.read_csv(\"/kaggle/input/delhi-weather-data/testset.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:07.927139Z","iopub.execute_input":"2024-06-13T14:17:07.927806Z","iopub.status.idle":"2024-06-13T14:17:08.168199Z","shell.execute_reply.started":"2024-06-13T14:17:07.927779Z","shell.execute_reply":"2024-06-13T14:17:08.167293Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"dataset.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:08.169962Z","iopub.execute_input":"2024-06-13T14:17:08.170249Z","iopub.status.idle":"2024-06-13T14:17:08.193754Z","shell.execute_reply.started":"2024-06-13T14:17:08.170224Z","shell.execute_reply":"2024-06-13T14:17:08.192823Z"},"trusted":true},"execution_count":61,"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"     datetime_utc  _conds   _dewptm   _fog   _hail   _heatindexm   _hum  \\\n0  19961101-11:00   Smoke       9.0      0       0           NaN   27.0   \n1  19961101-12:00   Smoke      10.0      0       0           NaN   32.0   \n2  19961101-13:00   Smoke      11.0      0       0           NaN   44.0   \n3  19961101-14:00   Smoke      10.0      0       0           NaN   41.0   \n4  19961101-16:00   Smoke      11.0      0       0           NaN   47.0   \n\n    _precipm   _pressurem   _rain   _snow   _tempm   _thunder   _tornado  \\\n0        NaN       1010.0       0       0     30.0          0          0   \n1        NaN      -9999.0       0       0     28.0          0          0   \n2        NaN      -9999.0       0       0     24.0          0          0   \n3        NaN       1010.0       0       0     24.0          0          0   \n4        NaN       1011.0       0       0     23.0          0          0   \n\n    _vism   _wdird  _wdire   _wgustm   _windchillm   _wspdm  \n0     5.0    280.0    West       NaN           NaN      7.4  \n1     NaN      0.0   North       NaN           NaN      NaN  \n2     NaN      0.0   North       NaN           NaN      NaN  \n3     2.0      0.0   North       NaN           NaN      NaN  \n4     1.2      0.0   North       NaN           NaN      0.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>datetime_utc</th>\n      <th>_conds</th>\n      <th>_dewptm</th>\n      <th>_fog</th>\n      <th>_hail</th>\n      <th>_heatindexm</th>\n      <th>_hum</th>\n      <th>_precipm</th>\n      <th>_pressurem</th>\n      <th>_rain</th>\n      <th>_snow</th>\n      <th>_tempm</th>\n      <th>_thunder</th>\n      <th>_tornado</th>\n      <th>_vism</th>\n      <th>_wdird</th>\n      <th>_wdire</th>\n      <th>_wgustm</th>\n      <th>_windchillm</th>\n      <th>_wspdm</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>19961101-11:00</td>\n      <td>Smoke</td>\n      <td>9.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>27.0</td>\n      <td>NaN</td>\n      <td>1010.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>30.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5.0</td>\n      <td>280.0</td>\n      <td>West</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>7.4</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>19961101-12:00</td>\n      <td>Smoke</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>32.0</td>\n      <td>NaN</td>\n      <td>-9999.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>North</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>19961101-13:00</td>\n      <td>Smoke</td>\n      <td>11.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>44.0</td>\n      <td>NaN</td>\n      <td>-9999.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>North</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>19961101-14:00</td>\n      <td>Smoke</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>41.0</td>\n      <td>NaN</td>\n      <td>1010.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>North</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>19961101-16:00</td>\n      <td>Smoke</td>\n      <td>11.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>47.0</td>\n      <td>NaN</td>\n      <td>1011.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1.2</td>\n      <td>0.0</td>\n      <td>North</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# dataset[\"_tempm\"]","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:08.195106Z","iopub.execute_input":"2024-06-13T14:17:08.195368Z","iopub.status.idle":"2024-06-13T14:17:08.199119Z","shell.execute_reply.started":"2024-06-13T14:17:08.195346Z","shell.execute_reply":"2024-06-13T14:17:08.198127Z"},"trusted":true},"execution_count":62,"outputs":[]},{"cell_type":"code","source":"# remove spaces on the column\ndataset.columns = dataset.columns.str.lstrip()\ndataset.columns = dataset.columns.str.rstrip()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:08.201601Z","iopub.execute_input":"2024-06-13T14:17:08.201959Z","iopub.status.idle":"2024-06-13T14:17:08.209730Z","shell.execute_reply.started":"2024-06-13T14:17:08.201929Z","shell.execute_reply":"2024-06-13T14:17:08.208898Z"},"trusted":true},"execution_count":63,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(15,10))\nsns.histplot(dataset[\"_tempm\"],bins=[i for i in range(0,61,5)],kde=False)\nplt.title(\"Distribution of temperature\")\nplt.grid()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:08.210836Z","iopub.execute_input":"2024-06-13T14:17:08.211104Z","iopub.status.idle":"2024-06-13T14:17:08.637127Z","shell.execute_reply.started":"2024-06-13T14:17:08.211080Z","shell.execute_reply":"2024-06-13T14:17:08.636198Z"},"trusted":true},"execution_count":64,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n  with pd.option_context('mode.use_inf_as_na', True):\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\n# set data index as datetime column\ndataset.index = pd.to_datetime(dataset.datetime_utc)\n\n# filter the columns by only the required_columns\nrequired_cols = ['_dewptm', '_fog', '_hail', '_hum', '_rain', '_snow', '_tempm', '_thunder', '_tornado']\ndataset = dataset[required_cols]\ndataset.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:08.638431Z","iopub.execute_input":"2024-06-13T14:17:08.638783Z","iopub.status.idle":"2024-06-13T14:17:09.170711Z","shell.execute_reply.started":"2024-06-13T14:17:08.638742Z","shell.execute_reply":"2024-06-13T14:17:09.169790Z"},"trusted":true},"execution_count":65,"outputs":[{"execution_count":65,"output_type":"execute_result","data":{"text/plain":"                     _dewptm  _fog  _hail  _hum  _rain  _snow  _tempm  \\\ndatetime_utc                                                            \n1996-11-01 11:00:00      9.0     0      0  27.0      0      0    30.0   \n1996-11-01 12:00:00     10.0     0      0  32.0      0      0    28.0   \n1996-11-01 13:00:00     11.0     0      0  44.0      0      0    24.0   \n1996-11-01 14:00:00     10.0     0      0  41.0      0      0    24.0   \n1996-11-01 16:00:00     11.0     0      0  47.0      0      0    23.0   \n\n                     _thunder  _tornado  \ndatetime_utc                             \n1996-11-01 11:00:00         0         0  \n1996-11-01 12:00:00         0         0  \n1996-11-01 13:00:00         0         0  \n1996-11-01 14:00:00         0         0  \n1996-11-01 16:00:00         0         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>_dewptm</th>\n      <th>_fog</th>\n      <th>_hail</th>\n      <th>_hum</th>\n      <th>_rain</th>\n      <th>_snow</th>\n      <th>_tempm</th>\n      <th>_thunder</th>\n      <th>_tornado</th>\n    </tr>\n    <tr>\n      <th>datetime_utc</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1996-11-01 11:00:00</th>\n      <td>9.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>30.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 12:00:00</th>\n      <td>10.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 13:00:00</th>\n      <td>11.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 14:00:00</th>\n      <td>10.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>41.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 16:00:00</th>\n      <td>11.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"\n# check number of nan values in dataframe\ndataset.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.171964Z","iopub.execute_input":"2024-06-13T14:17:09.172411Z","iopub.status.idle":"2024-06-13T14:17:09.180330Z","shell.execute_reply.started":"2024-06-13T14:17:09.172384Z","shell.execute_reply":"2024-06-13T14:17:09.179462Z"},"trusted":true},"execution_count":66,"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"_dewptm     621\n_fog          0\n_hail         0\n_hum        757\n_rain         0\n_snow         0\n_tempm      673\n_thunder      0\n_tornado      0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"#Let's remove the nan values\ndataset=dataset.fillna(method='ffill')\ndataset.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.181353Z","iopub.execute_input":"2024-06-13T14:17:09.181662Z","iopub.status.idle":"2024-06-13T14:17:09.201407Z","shell.execute_reply.started":"2024-06-13T14:17:09.181616Z","shell.execute_reply":"2024-06-13T14:17:09.200558Z"},"trusted":true},"execution_count":67,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_34/1898405648.py:2: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  dataset=dataset.fillna(method='ffill')\n","output_type":"stream"},{"execution_count":67,"output_type":"execute_result","data":{"text/plain":"                     _dewptm  _fog  _hail  _hum  _rain  _snow  _tempm  \\\ndatetime_utc                                                            \n1996-11-01 11:00:00      9.0     0      0  27.0      0      0    30.0   \n1996-11-01 12:00:00     10.0     0      0  32.0      0      0    28.0   \n1996-11-01 13:00:00     11.0     0      0  44.0      0      0    24.0   \n1996-11-01 14:00:00     10.0     0      0  41.0      0      0    24.0   \n1996-11-01 16:00:00     11.0     0      0  47.0      0      0    23.0   \n\n                     _thunder  _tornado  \ndatetime_utc                             \n1996-11-01 11:00:00         0         0  \n1996-11-01 12:00:00         0         0  \n1996-11-01 13:00:00         0         0  \n1996-11-01 14:00:00         0         0  \n1996-11-01 16:00:00         0         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>_dewptm</th>\n      <th>_fog</th>\n      <th>_hail</th>\n      <th>_hum</th>\n      <th>_rain</th>\n      <th>_snow</th>\n      <th>_tempm</th>\n      <th>_thunder</th>\n      <th>_tornado</th>\n    </tr>\n    <tr>\n      <th>datetime_utc</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1996-11-01 11:00:00</th>\n      <td>9.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>30.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 12:00:00</th>\n      <td>10.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>32.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>28.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 13:00:00</th>\n      <td>11.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 14:00:00</th>\n      <td>10.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>41.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>24.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1996-11-01 16:00:00</th>\n      <td>11.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>23.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"da_final=dataset.resample(\"D\").mean()\nda_final.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.202695Z","iopub.execute_input":"2024-06-13T14:17:09.203028Z","iopub.status.idle":"2024-06-13T14:17:09.235982Z","shell.execute_reply.started":"2024-06-13T14:17:09.202998Z","shell.execute_reply":"2024-06-13T14:17:09.234845Z"},"trusted":true},"execution_count":68,"outputs":[{"execution_count":68,"output_type":"execute_result","data":{"text/plain":"                _dewptm  _fog  _hail       _hum  _rain  _snow     _tempm  \\\ndatetime_utc                                                               \n1996-11-01    11.666667   0.0    0.0  52.916667    0.0    0.0  22.333333   \n1996-11-02    10.458333   0.0    0.0  48.625000    0.0    0.0  22.916667   \n1996-11-03    12.041667   0.0    0.0  55.958333    0.0    0.0  21.791667   \n1996-11-04    10.222222   0.0    0.0  48.055556    0.0    0.0  22.722222   \n1996-11-05     8.200000   0.0    0.0  29.400000    0.0    0.0  27.800000   \n\n              _thunder  _tornado  \ndatetime_utc                      \n1996-11-01         0.0       0.0  \n1996-11-02         0.0       0.0  \n1996-11-03         0.0       0.0  \n1996-11-04         0.0       0.0  \n1996-11-05         0.0       0.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>_dewptm</th>\n      <th>_fog</th>\n      <th>_hail</th>\n      <th>_hum</th>\n      <th>_rain</th>\n      <th>_snow</th>\n      <th>_tempm</th>\n      <th>_thunder</th>\n      <th>_tornado</th>\n    </tr>\n    <tr>\n      <th>datetime_utc</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1996-11-01</th>\n      <td>11.666667</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>52.916667</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>22.333333</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1996-11-02</th>\n      <td>10.458333</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>48.625000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>22.916667</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1996-11-03</th>\n      <td>12.041667</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>55.958333</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>21.791667</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1996-11-04</th>\n      <td>10.222222</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>48.055556</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>22.722222</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1996-11-05</th>\n      <td>8.200000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>29.400000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>27.800000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"da_final.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.240437Z","iopub.execute_input":"2024-06-13T14:17:09.241199Z","iopub.status.idle":"2024-06-13T14:17:09.250696Z","shell.execute_reply.started":"2024-06-13T14:17:09.241158Z","shell.execute_reply":"2024-06-13T14:17:09.249614Z"},"trusted":true},"execution_count":69,"outputs":[{"execution_count":69,"output_type":"execute_result","data":{"text/plain":"_dewptm     141\n_fog        141\n_hail       141\n_hum        141\n_rain       141\n_snow       141\n_tempm      141\n_thunder    141\n_tornado    141\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"da_final=da_final.fillna(method=\"ffill\")\nda_final.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.251809Z","iopub.execute_input":"2024-06-13T14:17:09.252367Z","iopub.status.idle":"2024-06-13T14:17:09.268115Z","shell.execute_reply.started":"2024-06-13T14:17:09.252334Z","shell.execute_reply":"2024-06-13T14:17:09.266825Z"},"trusted":true},"execution_count":70,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_34/3451548580.py:1: FutureWarning: DataFrame.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  da_final=da_final.fillna(method=\"ffill\")\n","output_type":"stream"},{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"_dewptm     0\n_fog        0\n_hail       0\n_hum        0\n_rain       0\n_snow       0\n_tempm      0\n_thunder    0\n_tornado    0\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.preprocessing import MinMaxScaler\n\nscaler=MinMaxScaler()\nscaled_data=scaler.fit_transform(da_final)\n\nsequence_length=10\nnum_features=len(da_final.columns)\n\n\nsequences=[]\nlabels=[]\n\nfor i in range(len(scaled_data)-sequence_length):\n    seq=scaled_data[i:i+sequence_length]\n    label=scaled_data[i+sequence_length][6]\n    sequences.append(seq)\n    labels.append(label)\n    \n#Convert to numpy array\nsequences=np.array(sequences)\nlabels=np.array(labels)\n\n#Split the dataset into training and testing\n\ntrain_size=int(0.80*len(sequences))\n\ntrain_x, test_x=sequences[:train_size],sequences[train_size:]\ntrain_y,test_y=labels[:train_size],labels[train_size:]\n\nprint(\"Train X shape:\", train_x.shape)\nprint(\"Train Y shape:\", train_y.shape)\nprint(\"Test X shape:\", test_x.shape)\nprint(\"Test Y shape:\", test_y.shape)\n\n    ","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.269860Z","iopub.execute_input":"2024-06-13T14:17:09.270298Z","iopub.status.idle":"2024-06-13T14:17:09.309486Z","shell.execute_reply.started":"2024-06-13T14:17:09.270250Z","shell.execute_reply":"2024-06-13T14:17:09.308652Z"},"trusted":true},"execution_count":71,"outputs":[{"name":"stdout","text":"Train X shape: (5976, 10, 9)\nTrain Y shape: (5976,)\nTest X shape: (1494, 10, 9)\nTest Y shape: (1494,)\n","output_type":"stream"}]},{"cell_type":"code","source":"scaled_data","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.310728Z","iopub.execute_input":"2024-06-13T14:17:09.311369Z","iopub.status.idle":"2024-06-13T14:17:09.319387Z","shell.execute_reply.started":"2024-06-13T14:17:09.311336Z","shell.execute_reply":"2024-06-13T14:17:09.318525Z"},"trusted":true},"execution_count":72,"outputs":[{"execution_count":72,"output_type":"execute_result","data":{"text/plain":"array([[0.44471154, 0.        , 0.        , ..., 0.46387643, 0.        ,\n        0.        ],\n       [0.40784486, 0.        , 0.        , ..., 0.48044345, 0.        ,\n        0.        ],\n       [0.45615292, 0.        , 0.        , ..., 0.44849278, 0.        ,\n        0.        ],\n       ...,\n       [0.71116864, 0.        , 0.        , ..., 0.76397608, 0.2       ,\n        0.        ],\n       [0.55022652, 0.        , 0.        , ..., 0.76326607, 0.        ,\n        0.        ],\n       [0.5420541 , 0.        , 0.        , ..., 0.73841555, 0.        ,\n        0.        ]])"},"metadata":{}}]},{"cell_type":"code","source":"#Some observation\ntrain_x.shape[2]","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.320564Z","iopub.execute_input":"2024-06-13T14:17:09.320852Z","iopub.status.idle":"2024-06-13T14:17:09.330934Z","shell.execute_reply.started":"2024-06-13T14:17:09.320829Z","shell.execute_reply":"2024-06-13T14:17:09.330107Z"},"trusted":true},"execution_count":73,"outputs":[{"execution_count":73,"output_type":"execute_result","data":{"text/plain":"9"},"metadata":{}}]},{"cell_type":"markdown","source":"**Model Creation**","metadata":{}},{"cell_type":"code","source":"in_shape=(train_x.shape[1],train_x.shape[2])\nprint(in_shape)","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.331985Z","iopub.execute_input":"2024-06-13T14:17:09.332260Z","iopub.status.idle":"2024-06-13T14:17:09.342393Z","shell.execute_reply.started":"2024-06-13T14:17:09.332238Z","shell.execute_reply":"2024-06-13T14:17:09.341551Z"},"trusted":true},"execution_count":74,"outputs":[{"name":"stdout","text":"(10, 9)\n","output_type":"stream"}]},{"cell_type":"code","source":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import LSTM, Dense, Dropout\nfrom tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n\n# Create the LSTM model\nmodel = Sequential()\n\n# Add LSTM layers with dropout\nmodel.add(LSTM(units=128, input_shape=(train_x.shape[1], train_x.shape[2]), return_sequences=True))\nmodel.add(Dropout(0.2))\n\nmodel.add(LSTM(units=64, return_sequences=True))\nmodel.add(Dropout(0.2))\n\nmodel.add(LSTM(units=32, return_sequences=False))\nmodel.add(Dropout(0.2))\n\n# Add a dense output layer\nmodel.add(Dense(units=1))\n\n# Compile the model\nmodel.compile(optimizer='adam', loss='mean_squared_error')\n","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.343704Z","iopub.execute_input":"2024-06-13T14:17:09.344042Z","iopub.status.idle":"2024-06-13T14:17:09.450062Z","shell.execute_reply.started":"2024-06-13T14:17:09.344012Z","shell.execute_reply":"2024-06-13T14:17:09.449120Z"},"trusted":true},"execution_count":75,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/rnn/rnn.py:204: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(**kwargs)\n","output_type":"stream"}]},{"cell_type":"code","source":"# model.compile(optimizer=\"adam\",loss=\"mean_squared_error\")","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.451336Z","iopub.execute_input":"2024-06-13T14:17:09.451594Z","iopub.status.idle":"2024-06-13T14:17:09.455180Z","shell.execute_reply.started":"2024-06-13T14:17:09.451572Z","shell.execute_reply":"2024-06-13T14:17:09.454306Z"},"trusted":true},"execution_count":76,"outputs":[]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.456276Z","iopub.execute_input":"2024-06-13T14:17:09.456536Z","iopub.status.idle":"2024-06-13T14:17:09.481912Z","shell.execute_reply.started":"2024-06-13T14:17:09.456514Z","shell.execute_reply":"2024-06-13T14:17:09.480820Z"},"trusted":true},"execution_count":77,"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential_2\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_2\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ lstm_6 (\u001b[38;5;33mLSTM\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │        \u001b[38;5;34m70,656\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_6 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m128\u001b[0m)        │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ lstm_7 (\u001b[38;5;33mLSTM\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │        \u001b[38;5;34m49,408\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_7 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ lstm_8 (\u001b[38;5;33mLSTM\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)             │        \u001b[38;5;34m12,416\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_8 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m32\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m33\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ lstm_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │        <span style=\"color: #00af00; text-decoration-color: #00af00\">70,656</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)        │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ lstm_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">49,408</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ lstm_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">12,416</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">33</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m132,513\u001b[0m (517.63 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">132,513</span> (517.63 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m132,513\u001b[0m (517.63 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">132,513</span> (517.63 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}]},{"cell_type":"code","source":"train_x","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.482836Z","iopub.execute_input":"2024-06-13T14:17:09.483097Z","iopub.status.idle":"2024-06-13T14:17:09.491484Z","shell.execute_reply.started":"2024-06-13T14:17:09.483074Z","shell.execute_reply":"2024-06-13T14:17:09.490658Z"},"trusted":true},"execution_count":78,"outputs":[{"execution_count":78,"output_type":"execute_result","data":{"text/plain":"array([[[0.44471154, 0.        , 0.        , ..., 0.46387643,\n         0.        , 0.        ],\n        [0.40784486, 0.        , 0.        , ..., 0.48044345,\n         0.        , 0.        ],\n        [0.45615292, 0.        , 0.        , ..., 0.44849278,\n         0.        , 0.        ],\n        ...,\n        [0.33538277, 0.        , 0.        , ..., 0.42600897,\n         0.        , 0.        ],\n        [0.32590607, 0.        , 0.        , ..., 0.3950265 ,\n         0.        , 0.        ],\n        [0.29262204, 0.        , 0.        , ..., 0.41051773,\n         0.        , 0.        ]],\n\n       [[0.40784486, 0.        , 0.        , ..., 0.48044345,\n         0.        , 0.        ],\n        [0.45615292, 0.        , 0.        , ..., 0.44849278,\n         0.        , 0.        ],\n        [0.40064103, 0.        , 0.        , ..., 0.47492111,\n         0.        , 0.        ],\n        ...,\n        [0.32590607, 0.        , 0.        , ..., 0.3950265 ,\n         0.        , 0.        ],\n        [0.29262204, 0.        , 0.        , ..., 0.41051773,\n         0.        , 0.        ],\n        [0.26518684, 0.        , 0.        , ..., 0.45687918,\n         0.        , 0.        ]],\n\n       [[0.45615292, 0.        , 0.        , ..., 0.44849278,\n         0.        , 0.        ],\n        [0.40064103, 0.        , 0.        , ..., 0.47492111,\n         0.        , 0.        ],\n        [0.33894231, 0.        , 0.        , ..., 0.61913303,\n         0.        , 0.        ],\n        ...,\n        [0.29262204, 0.        , 0.        , ..., 0.41051773,\n         0.        , 0.        ],\n        [0.26518684, 0.        , 0.        , ..., 0.45687918,\n         0.        , 0.        ],\n        [0.31885632, 0.        , 0.        , ..., 0.49582711,\n         0.        , 0.        ]],\n\n       ...,\n\n       [[0.55512997, 0.        , 0.        , ..., 0.48686739,\n         0.        , 0.        ],\n        [0.64811391, 0.        , 0.        , ..., 0.51121076,\n         0.        , 0.        ],\n        [0.59726331, 0.16666667, 0.        , ..., 0.49701046,\n         0.        , 0.        ],\n        ...,\n        [0.55658284, 0.        , 0.        , ..., 0.4733433 ,\n         0.        , 0.        ],\n        [0.58564032, 0.        , 0.        , ..., 0.49498185,\n         0.        , 0.        ],\n        [0.65319896, 0.        , 0.        , ..., 0.46860987,\n         0.        , 0.        ]],\n\n       [[0.64811391, 0.        , 0.        , ..., 0.51121076,\n         0.        , 0.        ],\n        [0.59726331, 0.16666667, 0.        , ..., 0.49701046,\n         0.        , 0.        ],\n        [0.60743343, 0.        , 0.        , ..., 0.44020927,\n         0.        , 0.        ],\n        ...,\n        [0.58564032, 0.        , 0.        , ..., 0.49498185,\n         0.        , 0.        ],\n        [0.65319896, 0.        , 0.        , ..., 0.46860987,\n         0.        , 0.        ],\n        [0.57183802, 0.        , 0.        , ..., 0.65794718,\n         0.16666667, 0.        ]],\n\n       [[0.59726331, 0.16666667, 0.        , ..., 0.49701046,\n         0.        , 0.        ],\n        [0.60743343, 0.        , 0.        , ..., 0.44020927,\n         0.        , 0.        ],\n        [0.57692308, 0.        , 0.        , ..., 0.46387643,\n         0.        , 0.        ],\n        ...,\n        [0.65319896, 0.        , 0.        , ..., 0.46860987,\n         0.        , 0.        ],\n        [0.57183802, 0.        , 0.        , ..., 0.65794718,\n         0.16666667, 0.        ],\n        [0.59217825, 0.        , 0.        , ..., 0.50647733,\n         0.        , 0.        ]]])"},"metadata":{}}]},{"cell_type":"code","source":"# Define callbacks\nearly_stopping = EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)\ncheckpoint_path=\"/kaggle/working/model.weights.h5\"\ncp_callback = tf.keras.callbacks.ModelCheckpoint(filepath=checkpoint_path,\n                                                 save_weights_only=True,\n                                                 verbose=1)\n# Train the model\nhistory = model.fit(\n    train_x, train_y,\n    epochs=100,\n    batch_size=64,\n    validation_split=0.2,  # Use part of the training data as validation\n    callbacks=[early_stopping, cp_callback]\n)","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:09.492708Z","iopub.execute_input":"2024-06-13T14:17:09.493049Z","iopub.status.idle":"2024-06-13T14:17:33.867531Z","shell.execute_reply.started":"2024-06-13T14:17:09.493019Z","shell.execute_reply":"2024-06-13T14:17:33.866606Z"},"trusted":true},"execution_count":79,"outputs":[{"name":"stdout","text":"Epoch 1/100\n\u001b[1m72/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0720\nEpoch 1: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 11ms/step - loss: 0.0698 - val_loss: 0.0049\nEpoch 2/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0105\nEpoch 2: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0105 - val_loss: 0.0045\nEpoch 3/100\n\u001b[1m70/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0091\nEpoch 3: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0091 - val_loss: 0.0049\nEpoch 4/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0084\nEpoch 4: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0084 - val_loss: 0.0042\nEpoch 5/100\n\u001b[1m71/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0077\nEpoch 5: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0077 - val_loss: 0.0039\nEpoch 6/100\n\u001b[1m72/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0081\nEpoch 6: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0081 - val_loss: 0.0058\nEpoch 7/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0079\nEpoch 7: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0079 - val_loss: 0.0037\nEpoch 8/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0073\nEpoch 8: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0073 - val_loss: 0.0048\nEpoch 9/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0070\nEpoch 9: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0070 - val_loss: 0.0035\nEpoch 10/100\n\u001b[1m71/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0068\nEpoch 10: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0068 - val_loss: 0.0035\nEpoch 11/100\n\u001b[1m72/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0070\nEpoch 11: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0070 - val_loss: 0.0033\nEpoch 12/100\n\u001b[1m72/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0063\nEpoch 12: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0064 - val_loss: 0.0060\nEpoch 13/100\n\u001b[1m67/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0073\nEpoch 13: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0072 - val_loss: 0.0032\nEpoch 14/100\n\u001b[1m71/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0058\nEpoch 14: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0058 - val_loss: 0.0034\nEpoch 15/100\n\u001b[1m71/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0059\nEpoch 15: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0059 - val_loss: 0.0029\nEpoch 16/100\n\u001b[1m72/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0053\nEpoch 16: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0053 - val_loss: 0.0029\nEpoch 17/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0052\nEpoch 17: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0052 - val_loss: 0.0027\nEpoch 18/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0052\nEpoch 18: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0052 - val_loss: 0.0027\nEpoch 19/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0050\nEpoch 19: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0050 - val_loss: 0.0026\nEpoch 20/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0048\nEpoch 20: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0048 - val_loss: 0.0029\nEpoch 21/100\n\u001b[1m74/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0046\nEpoch 21: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0046 - val_loss: 0.0025\nEpoch 22/100\n\u001b[1m68/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0047\nEpoch 22: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0047 - val_loss: 0.0025\nEpoch 23/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0045\nEpoch 23: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0045 - val_loss: 0.0030\nEpoch 24/100\n\u001b[1m69/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0047\nEpoch 24: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0047 - val_loss: 0.0024\nEpoch 25/100\n\u001b[1m71/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0043\nEpoch 25: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0042 - val_loss: 0.0026\nEpoch 26/100\n\u001b[1m72/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0041\nEpoch 26: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0041 - val_loss: 0.0026\nEpoch 27/100\n\u001b[1m71/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0040\nEpoch 27: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0040 - val_loss: 0.0023\nEpoch 28/100\n\u001b[1m70/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0042\nEpoch 28: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0042 - val_loss: 0.0024\nEpoch 29/100\n\u001b[1m68/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0038\nEpoch 29: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0038 - val_loss: 0.0024\nEpoch 30/100\n\u001b[1m70/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0039\nEpoch 30: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0039 - val_loss: 0.0023\nEpoch 31/100\n\u001b[1m73/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0042\nEpoch 31: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0042 - val_loss: 0.0022\nEpoch 32/100\n\u001b[1m71/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0037\nEpoch 32: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step - loss: 0.0037 - val_loss: 0.0023\nEpoch 33/100\n\u001b[1m69/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0036\nEpoch 33: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0036 - val_loss: 0.0023\nEpoch 34/100\n\u001b[1m74/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0036\nEpoch 34: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0036 - val_loss: 0.0023\nEpoch 35/100\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0037\nEpoch 35: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0037 - val_loss: 0.0023\nEpoch 36/100\n\u001b[1m67/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━━\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 0.0036\nEpoch 36: saving model to /kaggle/working/model.weights.h5\n\u001b[1m75/75\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 8ms/step - loss: 0.0036 - val_loss: 0.0031\n","output_type":"stream"}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"#Evaluate the best model on the test set\ntest_loss=model.evaluate(test_x,test_y)\nprint(\"Test Loss:\",test_loss)","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:33.869101Z","iopub.execute_input":"2024-06-13T14:17:33.869529Z","iopub.status.idle":"2024-06-13T14:17:34.055682Z","shell.execute_reply.started":"2024-06-13T14:17:33.869496Z","shell.execute_reply":"2024-06-13T14:17:34.054777Z"},"trusted":true},"execution_count":80,"outputs":[{"name":"stdout","text":"\u001b[1m47/47\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - loss: 0.0022\nTest Loss: 0.002160928910598159\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Traning and Validation Loss**","metadata":{}},{"cell_type":"code","source":"plt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title(\"Model Loss\")\nplt.xlabel(\"Epoch\")\nplt.ylabel(\"Loss\")\nplt.legend([\"Train\",\"Validation\"],loc=\"upper right\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:34.057157Z","iopub.execute_input":"2024-06-13T14:17:34.057693Z","iopub.status.idle":"2024-06-13T14:17:34.299716Z","shell.execute_reply.started":"2024-06-13T14:17:34.057658Z","shell.execute_reply":"2024-06-13T14:17:34.298660Z"},"trusted":true},"execution_count":81,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"****","metadata":{}},{"cell_type":"code","source":"from sklearn.metrics import mean_absolute_error, mean_squared_error\n\n# Assuming you have trained the model and have the 'best_model' object\n# Also, 'test_x' and 'test_y' should be available\n\n# Predict temperatures using the trained model\npredictions = model.predict(test_x)\n\n# Calculate evaluation metrics\nmae = mean_absolute_error(test_y, predictions)\nmse = mean_squared_error(test_y, predictions)\nrmse = np.sqrt(mse)\n\nprint(\"Mean Absolute Error (MAE):\", mae)\nprint(\"Mean Squared Error (MSE):\", mse)\nprint(\"Root Mean Squared Error (RMSE):\", rmse)","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:34.300992Z","iopub.execute_input":"2024-06-13T14:17:34.301312Z","iopub.status.idle":"2024-06-13T14:17:34.929254Z","shell.execute_reply.started":"2024-06-13T14:17:34.301285Z","shell.execute_reply":"2024-06-13T14:17:34.928335Z"},"trusted":true},"execution_count":82,"outputs":[{"name":"stdout","text":"\u001b[1m47/47\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 7ms/step\nMean Absolute Error (MAE): 0.035660754438448614\nMean Squared Error (MSE): 0.0021609286837810052\nRoot Mean Squared Error (RMSE): 0.04648579012753258\n","output_type":"stream"}]},{"cell_type":"code","source":"#y_true values\ntest_y_copies=np.repeat(test_y.reshape(-1,1),test_x.shape[-1],axis=-1)\ntrue_temp=scaler.inverse_transform(test_y_copies)[:,6]\n\nprediction=model.predict(test_x)\nprediction_copies=np.repeat(prediction, 9, axis=-1)\npredicted_temp=scaler.inverse_transform(prediction_copies)[:,6]","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:34.930409Z","iopub.execute_input":"2024-06-13T14:17:34.930735Z","iopub.status.idle":"2024-06-13T14:17:35.105381Z","shell.execute_reply.started":"2024-06-13T14:17:34.930710Z","shell.execute_reply":"2024-06-13T14:17:35.104436Z"},"trusted":true},"execution_count":83,"outputs":[{"name":"stdout","text":"\u001b[1m47/47\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step\n","output_type":"stream"}]},{"cell_type":"markdown","source":"**Plotting predicted and actual temperatures**","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10,6))\nplt.plot(da_final.index[-100:],true_temp[-100:],label=\"Actual\")\nplt.plot(da_final.index[-100:],predicted_temp[-100:],label=\"Predicted\")\nplt.title(\"Temperature Prediction vs Actual\")\nplt.xlabel(\"Time\")\nplt.ylabel(\"Temperature\")\nplt.legend()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-13T14:17:35.106602Z","iopub.execute_input":"2024-06-13T14:17:35.107222Z","iopub.status.idle":"2024-06-13T14:17:35.419437Z","shell.execute_reply.started":"2024-06-13T14:17:35.107189Z","shell.execute_reply":"2024-06-13T14:17:35.418556Z"},"trusted":true},"execution_count":84,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}]}]}