{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":8317,"databundleVersionId":109592,"sourceType":"competition"},{"sourceId":4484183,"sourceType":"datasetVersion","datasetId":2623949}],"dockerImageVersionId":30635,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/arjupaudel/fake-news-classification-bilstm?scriptVersionId=161298118\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nimport nltk","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:58.352293Z","iopub.execute_input":"2024-02-01T11:07:58.353198Z","iopub.status.idle":"2024-02-01T11:07:58.358009Z","shell.execute_reply.started":"2024-02-01T11:07:58.353159Z","shell.execute_reply":"2024-02-01T11:07:58.356939Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/fake-news/train.csv')\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:58.403738Z","iopub.execute_input":"2024-02-01T11:07:58.404019Z","iopub.status.idle":"2024-02-01T11:07:59.605132Z","shell.execute_reply.started":"2024-02-01T11:07:58.403996Z","shell.execute_reply":"2024-02-01T11:07:59.604256Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['title'][0]","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.606606Z","iopub.execute_input":"2024-02-01T11:07:59.6069Z","iopub.status.idle":"2024-02-01T11:07:59.612672Z","shell.execute_reply.started":"2024-02-01T11:07:59.606876Z","shell.execute_reply":"2024-02-01T11:07:59.611785Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['text'][0]","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.613848Z","iopub.execute_input":"2024-02-01T11:07:59.614108Z","iopub.status.idle":"2024-02-01T11:07:59.627748Z","shell.execute_reply.started":"2024-02-01T11:07:59.614085Z","shell.execute_reply":"2024-02-01T11:07:59.626866Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.630159Z","iopub.execute_input":"2024-02-01T11:07:59.63074Z","iopub.status.idle":"2024-02-01T11:07:59.646706Z","shell.execute_reply.started":"2024-02-01T11:07:59.630707Z","shell.execute_reply":"2024-02-01T11:07:59.645855Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data Proprocessing","metadata":{}},{"cell_type":"code","source":"# drop unnecessary columns\ndf = df.drop(columns=['id', 'title', 'author'], axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.647733Z","iopub.execute_input":"2024-02-01T11:07:59.64801Z","iopub.status.idle":"2024-02-01T11:07:59.653433Z","shell.execute_reply.started":"2024-02-01T11:07:59.647986Z","shell.execute_reply":"2024-02-01T11:07:59.65258Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# drop null values\ndf = df.dropna(axis=0)\n","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.654744Z","iopub.execute_input":"2024-02-01T11:07:59.655181Z","iopub.status.idle":"2024-02-01T11:07:59.66583Z","shell.execute_reply.started":"2024-02-01T11:07:59.655148Z","shell.execute_reply":"2024-02-01T11:07:59.664974Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"len(df)\n","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.666865Z","iopub.execute_input":"2024-02-01T11:07:59.667105Z","iopub.status.idle":"2024-02-01T11:07:59.674871Z","shell.execute_reply.started":"2024-02-01T11:07:59.667083Z","shell.execute_reply":"2024-02-01T11:07:59.674049Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.675951Z","iopub.execute_input":"2024-02-01T11:07:59.676202Z","iopub.status.idle":"2024-02-01T11:07:59.690176Z","shell.execute_reply.started":"2024-02-01T11:07:59.676181Z","shell.execute_reply":"2024-02-01T11:07:59.689366Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"**Data Preprocessing**\n","metadata":{}},{"cell_type":"code","source":"from nltk.corpus import stopwords","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.691238Z","iopub.execute_input":"2024-02-01T11:07:59.6918Z","iopub.status.idle":"2024-02-01T11:07:59.698478Z","shell.execute_reply.started":"2024-02-01T11:07:59.691769Z","shell.execute_reply":"2024-02-01T11:07:59.697625Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\n#creating list of possible stopwords from nltk library\nstop = stopwords.words('english')\n\ndef cleanText(txt):\n  # lowercaing\n\n    txt = txt.lower()\n  # removing stopwords\n    txt = ' '.join([word for word in txt.split() if word not in (stop)])\n  # removing non-alphabetic characters\n    txt = re.sub('[^A-Za-z]',' ',txt)\n    txt = re.sub('\\s','',txt)\n\n    return txt ","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:07:59.701539Z","iopub.execute_input":"2024-02-01T11:07:59.701824Z","iopub.status.idle":"2024-02-01T11:07:59.708237Z","shell.execute_reply.started":"2024-02-01T11:07:59.701802Z","shell.execute_reply":"2024-02-01T11:07:59.707409Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#applying text cleaning function to clean final_news\ndf['text'] = df['text'].apply(cleanText)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:12:04.513512Z","iopub.execute_input":"2024-02-01T11:12:04.514188Z","iopub.status.idle":"2024-02-01T11:12:32.159822Z","shell.execute_reply.started":"2024-02-01T11:12:04.514152Z","shell.execute_reply":"2024-02-01T11:12:32.158775Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Tokenization\n","metadata":{}},{"cell_type":"code","source":"from keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing.sequence import pad_sequences","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:37.845357Z","iopub.execute_input":"2024-02-01T11:08:37.845684Z","iopub.status.idle":"2024-02-01T11:08:37.850249Z","shell.execute_reply.started":"2024-02-01T11:08:37.845653Z","shell.execute_reply":"2024-02-01T11:08:37.849187Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# tokenize text\ntokenizer = Tokenizer()\ntokenizer.fit_on_texts(df['text'])\n\nword_index = tokenizer.word_index\n\nvocab_size = len(word_index)\nvocab_size\nprint(word_index)","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:37.851433Z","iopub.execute_input":"2024-02-01T11:08:37.851851Z","iopub.status.idle":"2024-02-01T11:08:45.671253Z","shell.execute_reply.started":"2024-02-01T11:08:37.85182Z","shell.execute_reply":"2024-02-01T11:08:45.669711Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# padding data\nsent_length=500\n\nsequences = tokenizer.texts_to_sequences(df['text'])\nprint(sequences)\npadded_seq = pad_sequences(sequences, maxlen=sent_length, padding='post', truncating='post')","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:45.672726Z","iopub.execute_input":"2024-02-01T11:08:45.673473Z","iopub.status.idle":"2024-02-01T11:08:53.435933Z","shell.execute_reply.started":"2024-02-01T11:08:45.67344Z","shell.execute_reply":"2024-02-01T11:08:53.434875Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"padded_seq","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:53.437109Z","iopub.execute_input":"2024-02-01T11:08:53.437384Z","iopub.status.idle":"2024-02-01T11:08:53.44502Z","shell.execute_reply.started":"2024-02-01T11:08:53.437361Z","shell.execute_reply":"2024-02-01T11:08:53.444026Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Input Split","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(padded_seq, df['label'], test_size=0.20, random_state=42,)","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:53.446092Z","iopub.execute_input":"2024-02-01T11:08:53.446397Z","iopub.status.idle":"2024-02-01T11:08:53.472702Z","shell.execute_reply.started":"2024-02-01T11:08:53.446374Z","shell.execute_reply":"2024-02-01T11:08:53.471697Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"## Model Training","metadata":{}},{"cell_type":"code","source":"from keras.layers import LSTM, Dropout, Dense, Embedding,Bidirectional\nfrom keras import Sequential\n\nembedding_vector_features=40\nmodel1=Sequential()\nmodel1.add(Embedding(vocab_size,embedding_vector_features,input_length=sent_length))\nmodel1.add(Bidirectional(LSTM(100)))\nmodel1.add(Dropout(0.3))\nmodel1.add(Dense(1,activation='sigmoid'))\nmodel1.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])\nprint(model1.summary())\n","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:53.474021Z","iopub.execute_input":"2024-02-01T11:08:53.47435Z","iopub.status.idle":"2024-02-01T11:08:54.023187Z","shell.execute_reply.started":"2024-02-01T11:08:53.474324Z","shell.execute_reply":"2024-02-01T11:08:54.021395Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model1.compile(loss='binary_crossentropy', optimizer='adam', metrics='accuracy')\n# model1.summary()","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:54.024297Z","iopub.execute_input":"2024-02-01T11:08:54.024582Z","iopub.status.idle":"2024-02-01T11:08:54.051277Z","shell.execute_reply.started":"2024-02-01T11:08:54.024557Z","shell.execute_reply":"2024-02-01T11:08:54.050406Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# train the model\nhistory = model1.fit(x_train, y_train, epochs=10, batch_size=256, validation_data=(x_test, y_test))","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:08:54.052376Z","iopub.execute_input":"2024-02-01T11:08:54.052673Z","iopub.status.idle":"2024-02-01T11:11:25.304728Z","shell.execute_reply.started":"2024-02-01T11:08:54.052625Z","shell.execute_reply":"2024-02-01T11:11:25.303788Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# visualize the results\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.xlabel('epochs')\nplt.ylabel('accuracy')\nplt.legend(['Train', 'Test'])\nplt.show()\n\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.xlabel('epochs')\nplt.ylabel('loss')\nplt.legend(['Train', 'Test'])\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-02-01T11:11:25.306096Z","iopub.execute_input":"2024-02-01T11:11:25.306405Z","iopub.status.idle":"2024-02-01T11:11:25.716186Z","shell.execute_reply.started":"2024-02-01T11:11:25.306378Z","shell.execute_reply":"2024-02-01T11:11:25.715369Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}